{
	"info": {
		"_postman_id": "888a6b7b-830f-4c88-bb79-aaf56cd2cbe2",
		"name": "Taller #3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8515750"
	},
	"item": [
		{
			"name": "Astronomy Picture of the Day (APOD)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains 'url'\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('url');",
							"});",
							"",
							"pm.test(\"Date is as expected\", function () {",
							"    pm.expect(pm.response.json().date).to.eql(pm.collectionVariables.get(\"date\"));",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.nasa.gov/planetary/apod?api_key={{YOUR_API_KEY}}&date={{date}}",
					"protocol": "https",
					"host": [
						"api",
						"nasa",
						"gov"
					],
					"path": [
						"planetary",
						"apod"
					],
					"query": [
						{
							"key": "api_key",
							"value": "{{YOUR_API_KEY}}"
						},
						{
							"key": "date",
							"value": "{{date}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Mars Rover Photos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains 'photos'\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('photos');",
							"    pm.expect(jsonData.photos).to.be.an('array');",
							"});",
							"",
							"pm.test(\"At least one photo is returned\", function () {",
							"    pm.expect(pm.response.json().photos.length).to.be.above(0);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?{{location}}={{location_number}}&api_key={{YOUR_API_KEY}}",
					"protocol": "https",
					"host": [
						"api",
						"nasa",
						"gov"
					],
					"path": [
						"mars-photos",
						"api",
						"v1",
						"rovers",
						"curiosity",
						"photos"
					],
					"query": [
						{
							"key": "{{location}}",
							"value": "{{location_number}}"
						},
						{
							"key": "api_key",
							"value": "{{YOUR_API_KEY}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "NeoWs (Near Earth Object Web Service)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains 'near_earth_objects'\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('near_earth_objects');",
							"});",
							"",
							"pm.test(\"Data is available for each date in the range\", function () {",
							"    const jsonData = pm.response.json();",
							"    const startDate = new Date(pm.collectionVariables.get(\"start_date\"));",
							"    const endDate = new Date(pm.collectionVariables.get(\"end_date\"));",
							"    let datesInRange = [];",
							"",
							"    // Generar las fechas del rango",
							"    for (let date = startDate; date <= endDate; date.setDate(date.getDate() + 1)) {",
							"        datesInRange.push(date.toISOString().split('T')[0]);",
							"    }",
							"",
							"    // Verificar que todas las fechas estÃ©n presentes",
							"    pm.expect(Object.keys(jsonData.near_earth_objects)).to.include.members(datesInRange);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.nasa.gov/neo/rest/v1/feed?start_date={{start_date}}&end_date={{end_date}}&api_key={{YOUR_API_KEY}}",
					"protocol": "https",
					"host": [
						"api",
						"nasa",
						"gov"
					],
					"path": [
						"neo",
						"rest",
						"v1",
						"feed"
					],
					"query": [
						{
							"key": "start_date",
							"value": "{{start_date}}"
						},
						{
							"key": "end_date",
							"value": "{{end_date}}"
						},
						{
							"key": "api_key",
							"value": "{{YOUR_API_KEY}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "YOUR_API_KEY",
			"value": "yQgz0pyLlOQkpYbjGOTS9dstJfIpIipkr7QZsYQT",
			"type": "string"
		},
		{
			"key": "date",
			"value": "2024-10-01",
			"type": "string"
		},
		{
			"key": "location",
			"value": "sol",
			"type": "string"
		},
		{
			"key": "location_number",
			"value": "1000",
			"type": "string"
		},
		{
			"key": "start_date",
			"value": "2024-10-01",
			"type": "string"
		},
		{
			"key": "end_date",
			"value": "2024-10-07",
			"type": "string"
		}
	]
}